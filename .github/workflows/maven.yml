name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # or any branch you want this to trigger on

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 21 for Maven build
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the Maven project with environment variables
      - name: Build with Maven
        run: |
          chmod +x ./mvnw
          PROD_SPRING_DATASOURCE_URL=${{ secrets.PROD_SPRING_DATASOURCE_URL }} \
          PROD_SPRING_DATASOURCE_USERNAME=${{ secrets.PROD_SPRING_DATASOURCE_USERNAME }} \
          PROD_SPRING_DATASOURCE_PASSWORD=${{ secrets.PROD_SPRING_DATASOURCE_PASSWORD }} \
          SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }} \
          SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }} \
          JWT_SECRET=${{ secrets.JWT_SECRET }} \
          MPESA_AUTH_HEADER=${{ secrets.MPESA_AUTH_HEADER }} \
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          AWS_REGION=${{ secrets.AWS_REGION }} \
          ./mvnw clean install -DskipTests

      # Log in to Docker Hub using secrets stored in GitHub Secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image and pass environment variables from GitHub Secrets
      - name: Build Docker image
        run: |
          docker build \
            --build-arg SPRING_DATASOURCE_URL=${{ secrets.PROD_SPRING_DATASOURCE_URL }} \
            --build-arg SPRING_DATASOURCE_USERNAME=${{ secrets.PROD_SPRING_DATASOURCE_USERNAME }} \
            --build-arg SPRING_DATASOURCE_PASSWORD=${{ secrets.PROD_SPRING_DATASOURCE_PASSWORD }} \
            --build-arg SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }} \
            --build-arg SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }} \
            --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --build-arg MPESA_AUTH_HEADER=${{ secrets.MPESA_AUTH_HEADER }} \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            -t ${{ secrets.DOCKER_USERNAME }}/event-management-app:latest .

      # Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/event-management-app:latest
